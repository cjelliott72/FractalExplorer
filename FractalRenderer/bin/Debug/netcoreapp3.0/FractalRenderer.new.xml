<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>FractalRenderer</name>
    </assembly>
    <members>
        <member name="T:FractalRenderer.FractalColorType">
            <summary>
            Enumerated Type used to indicate the color scheme used when rendering Fractal Bitmap
            </summary>
        </member>
        <member name="F:FractalRenderer.FractalColorType.BlackAndWhite">
            <summary>
            Black, White and Grey color scheme
            </summary>
        </member>
        <member name="F:FractalRenderer.FractalColorType.BlueScheme">
            <summary>
            Full Color scheme using Blue tones
            </summary>
        </member>
        <member name="F:FractalRenderer.FractalColorType.RedScheme">
            <summary>
            Full Color scheme using Red tones
            </summary>
        </member>
        <member name="T:FractalRenderer.Fractals.BurningShip">
            <summary>
            BurningShip fractal
            </summary>
        </member>
        <member name="M:FractalRenderer.Fractals.BurningShip.IterationCount(System.Numerics.Complex,System.Numerics.Complex,System.Double,System.Int32)">
            <summary>
            Returns the number of calculated iterations below the maxValueExtent, or the maxIterations if there are too many
            </summary>
            <param name="z">Complex term z in the fractal function z =  z^2 + c</param>
            <param name="c">Complex term c in the fractal function z =  z^2 + c</param>
            <param name="maxValueExtent">The upper limit of Abs(Complex Z), beyond which the value trends towards infinity</param>
            <param name="maxIterations">The break-out value, at this number of iterations no further calculations are performed</param>
            <returns>The number of calculated iterations or the MaxIterations if there are too many</returns>
        </member>
        <member name="T:FractalRenderer.Fractals.Magnet">
            <summary>
            Magnet fractal
            </summary>
        </member>
        <member name="M:FractalRenderer.Fractals.Magnet.IterationCount(System.Numerics.Complex,System.Numerics.Complex,System.Double,System.Int32)">
            <summary>
            Returns the number of calculated iterations below the maxValueExtent, or the maxIterations if there are too many
            </summary>
            <param name="z">Complex term z in the fractal function z =  z^2 + c</param>
            <param name="c">Complex term c in the fractal function z =  z^2 + c</param>
            <param name="maxValueExtent">The upper limit of Abs(Complex Z), beyond which the value trends towards infinity</param>
            <param name="maxIterations">The break-out value, at this number of iterations no further calculations are performed</param>
            <returns>The number of calculated iterations or the MaxIterations if there are too many</returns>
        </member>
        <member name="T:FractalRenderer.Fractals.Mandelbrot">
            <summary>
            Mandelbrot fractal
            </summary>
        </member>
        <member name="M:FractalRenderer.Fractals.Mandelbrot.IterationCount(System.Numerics.Complex,System.Numerics.Complex,System.Double,System.Int32)">
            <summary>
            Returns the number of calculated iterations below the maxValueExtent, or the maxIterations if there are too many
            </summary>
            <param name="z">Complex term z in the fractal function z =  z^2 + c</param>
            <param name="c">Complex term c in the fractal function z =  z^2 + c</param>
            <param name="maxValueExtent">The upper limit of Abs(Complex Z), beyond which the value trends towards infinity</param>
            <param name="maxIterations">The break-out value, at this number of iterations no further calculations are performed</param>
            <returns>The number of calculated iterations or the MaxIterations if there are too many</returns>
        </member>
        <member name="T:FractalRenderer.Fractals.Tricorn">
            <summary>
            Tricorn Fractal
            </summary>
        </member>
        <member name="M:FractalRenderer.Fractals.Tricorn.IterationCount(System.Numerics.Complex,System.Numerics.Complex,System.Double,System.Int32)">
            <summary>
            Returns the number of calculated iterations below the maxValueExtent, or the maxIterations if there are too many
            </summary>
            <param name="z">Complex term z in the fractal function z =  z^2 + c</param>
            <param name="c">Complex term c in the fractal function z =  z^2 + c</param>
            <param name="maxValueExtent">The upper limit of Abs(Complex Z), beyond which the value trends towards infinity</param>
            <param name="maxIterations">The break-out value, at this number of iterations no further calculations are performed</param>
            <returns>The number of calculated iterations or the MaxIterations if there are too many</returns>
        </member>
        <member name="T:FractalRenderer.IFractal">
            <summary>
            Interface for Fractal classes
            </summary>
        </member>
        <member name="M:FractalRenderer.IFractal.IterationCount(System.Numerics.Complex,System.Numerics.Complex,System.Double,System.Int32)">
            <summary>
            Returns the number of calculated iterations below the maxValueExtent, or the maxIterations if there are too many
            </summary>
            <param name="z">Complex term z in the fractal function z =  z^2 + c</param>
            <param name="c">Complex term c in the fractal function z =  z^2 + c</param>
            <param name="maxValueExtent">The upper limit of Abs(Complex Z), beyond which the value trends towards infinity</param>
            <param name="maxIterations">The break-out value, at this number of iterations no further calculations are performed</param>
            <returns>The number of calculated iterations or the MaxIterations if there are too many</returns>
        </member>
        <member name="T:FractalRenderer.IFractalRenderer">
            <summary>
            Interface for Fractal Rendering Classes
            </summary>
        </member>
        <member name="M:FractalRenderer.IFractalRenderer.Render(FractalRenderer.ParametersDto,FractalRenderer.IFractal)">
            <summary>
            This Asynchronous method returns a Fractal Bitmap generated from the provided parameters
            </summary>
            <param name="parameters">ParametersDto</param>
            <param name="fractal">IFractal instance</param>
            <returns>Bitmap</returns>
        </member>
        <member name="T:FractalRenderer.MandelbrotRenderer">
            <summary>
            This class renders fractals of the Mandelbrot set
            </summary>
        </member>
        <member name="M:FractalRenderer.MandelbrotRenderer.Render(FractalRenderer.ParametersDto,FractalRenderer.IFractal)">
            <summary>
            This Asynchronous method returns a Fractal Bitmap generated from the provided parameters
            </summary>
            <param name="parameters">ParametersDto</param>
            <param name="fractal">IFractal instance</param>
            <returns>Bitmap</returns>
        </member>
        <member name="T:FractalRenderer.PaletteHelper">
            <summary>
            Common helper methods for calculating or converting pixel colors
            </summary>
        </member>
        <member name="M:FractalRenderer.PaletteHelper.GetColor(System.Int32,System.Int32,FractalRenderer.FractalColorType)">
            <summary>
            Gets the fractal pixel color for a given iteration
            </summary>
            <param name="iteration">Current fractal Iteration</param>
            <param name="maxIterations">Maximum Iterations</param>
            <param name="colorType">FractalColorType</param>
            <returns>Color</returns>
        </member>
        <member name="M:FractalRenderer.PaletteHelper.GetColorFromHSV(System.Double,System.Double,System.Double)">
            <summary>
            Returns a RGB Color for the given HSV parameters
            </summary>
            <param name="hue">Hue</param>
            <param name="saturation">Saturation</param>
            <param name="value">Value</param>
            <returns>Color</returns>
        </member>
        <member name="T:FractalRenderer.ParametersDto">
            <summary>
            This Dto class contains the required parameters for generating a Fractal image
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.Height">
            <summary>
            Height in pixels of the output Bitmap
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.Width">
            <summary>
            Width in pixels of the output Bitmap
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.xMinimum">
            <summary>
            Minimum (leftmost) coordinate of the x-axis to be plotted
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.xMaximum">
            <summary>
            Maximum (rightmost) coordinate of the x-axis to be plotted
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.yMinimum">
            <summary>
            Minimum (topmost) coordinate of the y-axis to be plotted
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.yMaximum">
            <summary>
            Maximum (bottommost) coordinate of the y-axis to be plotted
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.MaxIterations">
            <summary>
            The break-out value, at this number of iterations no further calculations are performed
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.MaxValueExtent">
            <summary>
            The upper limit of Abs(Complex Z), beyond which the value trends towards infinity
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.ColorType">
            <summary>
            FractalColorType to be used in generated image
            </summary>
        </member>
        <member name="P:FractalRenderer.ParametersDto.FractalName">
            <summary>
            Name of the Fractal to be rendered
            </summary>
        </member>
        <member name="T:FractalRenderer.PlotWindow">
            <summary>
            This struct encapsulates the real and imaginary coordinates for the graph a Fractal will be rendered against
            </summary>
        </member>
        <member name="M:FractalRenderer.PlotWindow.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Class constructor
            </summary>
            <param name="realStart">Initial value for RealStart</param>
            <param name="realEnd">Initial value for RealEnd</param>
            <param name="imagStart">Initial value for ImagStart</param>
            <param name="imagEnd">Initial value for ImagEnd</param>
        </member>
        <member name="P:FractalRenderer.PlotWindow.RealStart">
            <summary>
            The start coordinate of the Real (x dimension) window
            </summary>
        </member>
        <member name="P:FractalRenderer.PlotWindow.RealEnd">
            <summary>
            The end coordinate of the Real (x dimension) window
            </summary>
        </member>
        <member name="P:FractalRenderer.PlotWindow.ImagStart">
            <summary>
            The start coordinate of the Imaginary (y dimension) window
            </summary>
        </member>
        <member name="P:FractalRenderer.PlotWindow.ImagEnd">
            <summary>
            The end coordinate of the Imaginary (y dimension) window
            </summary>
        </member>
    </members>
</doc>